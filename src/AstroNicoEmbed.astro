---
interface Props {
    /**
     * The ID of the Niconico video to embed. This is the part of the video URL after `watch/`, e.g. `sm9` for `https://www.nicovideo.jp/watch/sm9`
     */
    id: string;

    /**
     * The loading strategy for the video player. If set to `lazy`, the video player will only be loaded when it is in the viewport. If set to `eager`, the video player will be loaded immediately.
     */
    loading?: "lazy" | "eager";

    /**
     * The aspect ratio of the video player. This is used to calculate the height of the video player based on the width. Its format is same as CSS `aspect-ratio` property.
     */
    aspectRatio?: string;
}

let videoId = Astro.props.id;

if (Astro.props.id.startsWith("https://www.nicovideo.jp/watch/")) {
    const videoUrl = new URL(Astro.props.id);

    const possiblyVideoId = videoUrl.pathname.split("/").pop();
    if (!possiblyVideoId) {
        throw new Error(`Invalid niconico video ID: ${Astro.props.id}`);
    }

    videoId = possiblyVideoId;
}
---

<iframe
    class="embedded-nico-video-component"
    src={`https://embed.nicovideo.jp/watch/${videoId}`}
    allowfullscreen
    loading={Astro.props.loading ?? "lazy"}
    allow="picture-in-picture;"
    style={`aspect-ratio: ${Astro.props.aspectRatio ?? "16 / 9"};`}></iframe>
<style>
    .embedded-nico-video-component {
        width: 100%;
        height: auto;
        border: none;
    }
</style>
